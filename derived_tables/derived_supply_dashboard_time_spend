with V1 as 
(
	with t as(
select e.uuid from stanza.erp_stanzaestate_estate e
left join stanza.erp_stanzaestate_status_tracker st on e.uuid = st.context_uuid 
group by 1
having max(st.updated_at) >= '2021-09-01' 
)
SELECT  DATE(e.created_at) as createdDate, e.estate_name AS PropertyName, e.property_name, e.city AS city,  
m.micromarket_name, e.estate_status,st.updated_at as updatedAt,st.context_uuid as propertyUUID, st.status_name as status, st.created_at as screatedat,
v.typeOfBrand, v.expectedBedCount, v.effectiveBedCount,
v.buildingHandoverDate, v.rentStartDate, v.leasedurationinyears, v.leaselockinperiodinyears, v.rentalinflationinyears,
v.advancerentmonthcount, v.securitydepositmonthsofrent, monthlyrent, v.buildingtype
FROM stanza.erp_stanzaestate_estate_level_one_view v
left join stanza.erp_stanzaestate_estate e on v.estate_id = e.id and e."__hevo__marked_deleted" != true
join t on t.uuid = e.uuid
join stanza.erp_transformation_master_micromarket m on m.id = e.micromarket_id and m."__hevo__marked_deleted" != true
left join
(select attribute_value, estate_id, attribute_name from stanza.erp_stanzaestate_estate_attributes eu where attribute_name = 'competitorName' and "__hevo__marked_deleted" != true)eu
on e.id = eu.estate_id
left join stanza.erp_stanzaestate_status_tracker st on e.uuid = st.context_uuid and st."__hevo__marked_deleted" != true
order by e.id
),
V2 as
(
with tob as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as type_of_Brand from stanza.estatev2prod_property_answer
where variable_name = 'typeOfBrand'
and "__hevo__marked_deleted" != true),
ebc as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as expected_bed_count from stanza.estatev2prod_property_answer
where variable_name = 'expectedBedCount'
and "__hevo__marked_deleted" != true),
ldy as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as lease_Duration_In_Years from stanza.estatev2prod_property_answer
where variable_name = 'leaseDurationInYears'
and "__hevo__marked_deleted" != true),
lpy as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as lease_Lock_InPeriod_In_Years from stanza.estatev2prod_property_answer
where variable_name = 'leaseLockInPeriodInYears'
and "__hevo__marked_deleted" != true),
mr as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as monthly_Rent from stanza.estatev2prod_property_answer
where variable_name = 'monthlyRent'
and "__hevo__marked_deleted" != true),
bhd as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as building_handover_date from stanza.estatev2prod_property_answer
where variable_name = 'buildingHandoverDate'
and "__hevo__marked_deleted" != true),
riy as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as rental_Inflation_InYears from stanza.estatev2prod_property_answer
where variable_name = 'rentalInflationInYears'
and "__hevo__marked_deleted" != true),
arc as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as advance_Rent_Month_Count from stanza.estatev2prod_property_answer
where variable_name = 'advanceRentMonthCount'
and "__hevo__marked_deleted" != true),
bt as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as building_type from stanza.estatev2prod_property_answer
where variable_name = 'buildingType'
and "__hevo__marked_deleted" != true),
sdr as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as security_Deposit_Months_OfRent from stanza.estatev2prod_property_answer
where variable_name = 'securityDepositMonthsOfRent'
and "__hevo__marked_deleted" != true),
rsd as (
select property_uuid, variable_name, json_extract_array_element_text(json_serialize(answers), 0)  as rent_start_date from stanza.estatev2prod_property_answer
where variable_name = 'rentStartDate'
and "__hevo__marked_deleted" != true)
select distinct a.propertytypeuuid, a.createdat, a.name as PropertyName, a.propertytypename, a.cityname, a.micromarketname,
a.propertystatus as estate_status, t.updatedat as updatedAt, t.property_uuid as propertyUUID, t.estate_status as status, t.createdat as screatedat,
case when a.propertynaming is not null then json_extract_path_text(json_serialize(propertynaming), 'propertyName') end as property_name,
type_of_Brand, expected_bed_count, no_of_beds as effective_bed_count,
lease_Duration_In_Years, lease_Lock_InPeriod_In_Years, monthly_Rent, building_handover_date, rental_Inflation_InYears, advance_Rent_Month_Count,
building_type, security_Deposit_Months_OfRent, rent_start_date
from stanza.estatev2prod_property a
left join stanza.estatev2prod_property_answer b on a."_id" = b.property_uuid and b."__hevo__marked_deleted" != true
left join stanza.erp_design_service_property c on a.uuid = c.estate_uuid and c."__hevo__marked_deleted" != true
left join stanza.estatev2prod_property_timeline t on a.uuid = t.property_uuid and t."__hevo__marked_deleted" != true
left join tob on a."_id" = tob.property_uuid
left join ebc on a."_id" = ebc.property_uuid
left join ldy on a."_id" = ldy.property_uuid
left join lpy on a."_id" = lpy.property_uuid
left join mr on a."_id" = mr.property_uuid
left join bhd on a."_id" = bhd.property_uuid
left join riy on a."_id" = riy.property_uuid
left join arc on a."_id" = arc.property_uuid
left join bt on a."_id" = bt.property_uuid
left join sdr on a."_id" = sdr.property_uuid
left join rsd on a."_id" = rsd.property_uuid
where propertytypeuuid not in ('61ee7bcfdba06ee4acb70db4','618113858e73bb088e908484','611119f98e73bb4c766b8557','610a34d38e73bb0cf013cfed')
    and lower(name) not like '%test%' and a."__hevo__marked_deleted" != true
order by 2
),

comb as (select createdDate, PropertyName, property_name, city, micromarket_name, estate_status, updatedAt, propertyUUID, status, typeOfBrand, expectedBedCount,
effectiveBedCount, buildingHandoverDate, rentStartDate, leasedurationinyears, leaselockinperiodinyears, monthlyrent, screatedat,
securitydepositmonthsofrent, advancerentmonthcount, rentalinflationinyears, buildingtype, 'V1' as bifurcation
from V1
union
select createdat as createdDate, PropertyName, property_name, cityname as city, micromarketname as micromarket_name,
estate_status, updatedAt, propertyUUID, status, type_of_Brand as typeOfBrand, cast(expected_bed_count as bigint) expectedBedCount, effective_bed_count as effectiveBedCount, building_handover_date as buildingHandoverDate, rent_start_date as rentStartDate,
lease_Duration_In_Years as leasedurationinyears, lease_Lock_InPeriod_In_Years as leaselockinperiodinyears, monthly_Rent as monthlyrent,screatedat, security_Deposit_Months_OfRent as securitydepositmonthsofrent, advance_Rent_Month_Count as advancerentmonthcount, rental_Inflation_InYears as rentalinflationinyears, building_type as buildingtype, 'V2' as bifurcation from V2
order by bifurcation,1),

comp_fnl as (select comb.*, case when city = 'Ahmedabad' then 'West'
when city = 'Vidya Nagar' then 'West'
when city = 'Pune' then 'West'
when city = 'Hyderabad' then 'South'
when city = 'Bangalore' then 'South'
when city = 'Delhi' then 'North + East'
when city = 'Gandhinagar' then 'West'
when city = 'Coimbatore' then 'South'
when city = 'Chennai' then 'South'
when city = 'Indore' then 'West'
when city = 'Vishakhapatnam' then 'South'
when city = 'Cochin' then 'South'
when city = 'Jaipur' then 'North + East'
when city = 'Nagpur' then 'West'
when city = 'Dehradun' then 'North + East'
when city = 'Manipal' then 'South'
when city = 'Vadodara' then 'West'
when city = 'Vijayawada' then 'South'
when city = 'Mangalore' then 'South'
when city = 'Visakhapatnam' then 'South'
when city = 'Belgaum' then 'South'
when city = 'Hosur' then 'South'
when city = 'Trivandrum' then 'South'
when city = 'Guntur' then 'South'
when city = 'Hubli Dharawal' then 'South'
when city = 'Bhopal' then 'West'
when city = 'Gurgaon' then 'North + East'
when city = 'Bhuabneshwar' then 'North + East'
when city = 'Tirupati' then 'South'
when city = 'Mumbai' then 'West'
when city = 'Noida' then 'North + East'
when city = 'Greater Noida' then 'North + East'
when city = 'Kochi' then 'South'
when city = 'Bhubaneswar' then 'North + East'
when city = 'Kota' then 'North + East'
when city = 'Lucknow' then 'North + East'
when city = 'Rajkot' then 'West'
when city = 'Udupi' then 'South'
when city = 'Bengaluru' then 'South'
when city = 'Nashik' then 'West'
when city = 'Baroda' then 'West'
when city = 'Vidhya Nagar' then 'West'
when city = 'Vizag' then 'South' end as "zone",
case when city = 'Ahmedabad' then 'West 1'
when city = 'Vidya Nagar' then 'West 1'
when city = 'Pune' then 'West 2'
when city = 'Hyderabad' then 'AP + Telangana'
when city = 'Bangalore' then 'Karnataka + Kerala'
when city = 'Delhi' then 'North + East'
when city = 'Gandhinagar' then 'West 1'
when city = 'Coimbatore' then 'Tamil Nadu'
when city = 'Chennai' then 'Tamil Nadu'
when city = 'Indore' then 'West 1'
when city = 'Vishakhapatnam' then 'AP + Telangana'
when city = 'Cochin' then 'Karnataka + Kerala'
when city = 'Jaipur' then 'North + East'
when city = 'Nagpur' then 'West 2'
when city = 'Dehradun' then 'North + East'
when city = 'Manipal' then 'Karnataka + Kerala'
when city = 'Vadodara' then 'West 1'
when city = 'Vijayawada' then 'AP + Telangana'
when city = 'Mangalore' then 'Karnataka + Kerala'
when city = 'Visakhapatnam' then 'AP + Telangana'
when city = 'Belgaum' then 'Karnataka + Kerala'
when city = 'Hosur' then 'Karnataka + Kerala'
when city = 'Trivandrum' then 'Karnataka + Kerala'
when city = 'Guntur' then 'AP + Telangana'
when city = 'Hubli Dharawal' then 'Karnataka + Kerala'
when city = 'Bhopal' then 'West 1'
when city = 'Gurgaon' then 'North + East'
when city = 'Bhuabneshwar' then 'North + East'
when city = 'Tirupati' then 'AP + Telangana'
when city = 'Mumbai' then 'West 1'
when city = 'Noida' then 'North + East'
when city = 'Greater Noida' then 'North + East'
when city = 'Kochi' then 'Karnataka + Kerala'
when city = 'Bhubaneswar' then 'North + East'
when city = 'Kota' then 'North + East'
when city = 'Lucknow' then 'North + East'
when city = 'Rajkot' then 'West 1'
when city = 'Udupi' then 'Karnataka + Kerala'
when city = 'Bengaluru' then 'Karnataka + Kerala'
when city = 'Nashik' then 'West 2'
when city = 'Baroda' then 'West 1'
when city = 'Vidhya Nagar' then 'West 1'
when city = 'Vizag' then 'AP + Telangana' end as "circle",
coalesce(effectiveBedCount, expectedBedCount) as total_bed_count,
max(updatedat) over(partition by propertyname,propertyuuid,status) as max_date,
max(screatedat) over(partition by propertyname,propertyuuid,status) as max_screatedat,

case when estate_status = 'DRAFT_IN_PROGRESS' then '1.Under Draft'
when estate_status = 'SENT_FOR_APPROVAL_TO_CLUSTER_MANAGER' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL_TO_ZONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_BY_ZONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'PENDING_DESIGN_FILES' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_CH' then '3.L1'
when estate_status = 'SENT_BACK_BY_CH' then '2.Pre L1'
when estate_status = 'PENDING_INITIAL_BED_COUNT' then '2.Pre L1'
when estate_status = 'SENT_BACK_FROM_INITIAL_BED_COUNT' then '2.Pre L1'
when estate_status = 'SENT_BACK_L1_BY_SANDEEP' then '2.Pre L1'
when estate_status = 'SENT_TO_FILL_L2_DETAILS' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_L2_APPROVAL_TO_ZH' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L2_BY_ZH' then '4.Pre L2 approval'
when estate_status =  ‘SENT_BACK_L2_BY_ZH_L2’  then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_L2_APPROVAL_TO_NH' then '5.L2'
when estate_status = 'SENT_BACK_L2_BY_NH' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_TRANSFORMATION_AND_TITLE_DOCS' then '5.L2'
when estate_status = 'SENT_TO_TITLE_DOCS_AND_SANDEEP' then '5.L2'
when estate_status = 'SENT_TO_TITLE_DOCS' then '5.L2'
when estate_status = 'SENT_FOR_APPROVAL_TO_TRANSFORMATION_AND_LEGAL' then '5.L2'
when estate_status = 'SENT_TO_TRANSFORMATION' then '5.L2'
when estate_status = 'SENT_BACK_BY_TRANSFORMATION' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_LEGAL' then '5.L2'
when estate_status = 'SENT_TO_LEGAL_AND_SANDEEP' then '5.L2'
when estate_status = 'SENT_BACK_BY_LEGAL' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_SANDEEP' then '5.L2'
when estate_status = 'SENT_BACK_BY_SANDEEP' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_APPROVAL_TO_LEGAL' then '5.L2'
when estate_status = 'SENT_BACK_BY_LEGAL_TITLE_DOCS' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L2_BY_ANDY' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_LEADERSHIP_APPROVAL' then '5.L2'
when estate_status = 'SENT_BACK_BY_ANDY' then '2.Pre L1'
when estate_status = 'SENT_FOR_ATL' then '6.Pre ATL signing'
when estate_status = 'ATL_UPLOAD_PENDING' then '7.ATL Generated'
when estate_status = 'SIGNED_ATL_UPLOADED' then '7.ATL Generated'
when estate_status = 'SENT_BACK_BY_LEADERSHIP' then '2.Pre L1'
when estate_status = 'L1_CALLBACK_APPROVAL' then '2.Pre L1'
when estate_status = 'L2_CALLBACK_APPROVAL' then '2.Pre L1'
when estate_status = 'L1_DROP_APPROVAL' then '9.Dropped/Lost'
when estate_status = 'L2_DROP_APPROVAL' then '9.Dropped/Lost'
when estate_status = 'PROPERTY_APPROVED' then '8.Naming Done'
when estate_status = 'DROPPED' then '9.Dropped/Lost'
when estate_status = 'LOI_APPROVAL_REQUEST_RAISED' then 'Other'
when estate_status = 'LOI_REQUEST_APPROVED' then 'Other'
when estate_status = 'LOI_REQUEST_DECLINE' then 'Other'
when estate_status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD_WITH_DESIGN_FILES' then '2.Pre L1'
when estate_status = 'APPROVED_BY_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_BACK_BY_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_NATIONAL_HEAD' then '2.Pre L1'
when estate_status = 'SENT_BACK_L1_BY_NATIONAL_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_LEADERSHIP' then '3.L1'
when estate_status = 'APPROVED_L1_BY_LEADERSHIP' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L1_BY_LEADERSHIP' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK' then '4.Pre L2 approval'
when estate_status = 'APPROVED_BY_NATIONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'APPROVED_BY_TRANSFORMATION' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_SANDEEP_APPROVAL' then '5.L2'
when estate_status = 'SHORTLISTED' then '6.Pre ATL signing'
when estate_status = 'SENT_TO_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when estate_status = 'SENT_BACK_BY_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when estate_status = 'APPROVED_BY_LEADERSHIP' then '8.Naming Done'
when estate_status = 'DROPPED_REQUESTED' then '9.Dropped/Lost'
when estate_status = 'DROPPED_DECLINE' then 'Other'
when estate_status = 'CALLBACK_TO_UNDER_DRAFT' then '1.Under Draft'
when estate_status = 'CALLBACK_TO_L1_APPROVED' then '4.Pre L2 approval'
when estate_status = 'CALLBACK_APPROVED' then '1.Under Draft'
when estate_status = 'CALLBACK_DECLINE' then 'Other'
when estate_status = 'PENDING_SALES_APPROVAL' then '2.Pre L1' end as Latest_Stage,


case when estate_status = 'DRAFT_IN_PROGRESS' then '1.Under Draft'
when estate_status = 'SENT_FOR_APPROVAL_TO_CLUSTER_MANAGER' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL_TO_ZONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_BY_ZONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'PENDING_DESIGN_FILES' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_CH' then '3.L1'
when estate_status = 'SENT_BACK_BY_CH' then '2.Pre L1'
when estate_status = 'PENDING_INITIAL_BED_COUNT' then '2.Pre L1'
when estate_status = 'SENT_BACK_FROM_INITIAL_BED_COUNT' then '2.Pre L1'
when estate_status = 'SENT_BACK_L1_BY_SANDEEP' then '2.Pre L1'
when estate_status = 'SENT_TO_FILL_L2_DETAILS' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_L2_APPROVAL_TO_ZH' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L2_BY_ZH' then '4.Pre L2 approval'
when estate_status =  ‘SENT_BACK_L2_BY_ZH_L2’  then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_L2_APPROVAL_TO_NH' then '5.L2'
when estate_status = 'SENT_BACK_L2_BY_NH' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_TRANSFORMATION_AND_TITLE_DOCS' then '5.L2'
when estate_status = 'SENT_TO_TITLE_DOCS_AND_SANDEEP' then '5.L2'
when estate_status = 'SENT_TO_TITLE_DOCS' then '5.L2'
when estate_status = 'SENT_FOR_APPROVAL_TO_TRANSFORMATION_AND_LEGAL' then '5.L2'
when estate_status = 'SENT_TO_TRANSFORMATION' then '5.L2'
when estate_status = 'SENT_BACK_BY_TRANSFORMATION' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_LEGAL' then '5.L2'
when estate_status = 'SENT_TO_LEGAL_AND_SANDEEP' then '5.L2'
when estate_status = 'SENT_BACK_BY_LEGAL' then '4.Pre L2 approval'
when estate_status = 'SENT_TO_SANDEEP' then '5.L2'
when estate_status = 'SENT_BACK_BY_SANDEEP' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_APPROVAL_TO_LEGAL' then '5.L2'
when estate_status = 'SENT_BACK_BY_LEGAL_TITLE_DOCS' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L2_BY_ANDY' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_LEADERSHIP_APPROVAL' then '5.L2'
when estate_status = 'SENT_BACK_BY_ANDY' then '2.Pre L1'
when estate_status = 'SENT_FOR_ATL' then '6.Pre ATL signing'
when estate_status = 'ATL_UPLOAD_PENDING' then '7.ATL Generated'
when estate_status = 'SIGNED_ATL_UPLOADED' then '7.ATL Generated'
when estate_status = 'SENT_BACK_BY_LEADERSHIP' then '2.Pre L1'
when estate_status = 'L1_CALLBACK_APPROVAL' then '2.Pre L1'
when estate_status = 'L2_CALLBACK_APPROVAL' then '2.Pre L1'
when estate_status = 'L1_DROP_APPROVAL' then '9.Dropped/Lost'
when estate_status = 'L2_DROP_APPROVAL' then '9.Dropped/Lost'
when estate_status = 'PROPERTY_APPROVED' then '8.Naming Done'
when estate_status = 'DROPPED' then '9.Dropped/Lost'
when estate_status = 'LOI_APPROVAL_REQUEST_RAISED' then 'Other'
when estate_status = 'LOI_REQUEST_APPROVED' then 'Other'
when estate_status = 'LOI_REQUEST_DECLINE' then 'Other'
when estate_status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD_WITH_DESIGN_FILES' then '2.Pre L1'
when estate_status = 'APPROVED_BY_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_BACK_BY_CITY_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_NATIONAL_HEAD' then '2.Pre L1'
when estate_status = 'SENT_BACK_L1_BY_NATIONAL_HEAD' then '2.Pre L1'
when estate_status = 'SENT_FOR_L1_APPROVAL_TO_LEADERSHIP' then '3.L1'
when estate_status = 'APPROVED_L1_BY_LEADERSHIP' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK_L1_BY_LEADERSHIP' then '2.Pre L1'
when estate_status = 'SENT_FOR_APPROVAL' then '4.Pre L2 approval'
when estate_status = 'SENT_BACK' then '4.Pre L2 approval'
when estate_status = 'APPROVED_BY_NATIONAL_HEAD' then '4.Pre L2 approval'
when estate_status = 'APPROVED_BY_TRANSFORMATION' then '4.Pre L2 approval'
when estate_status = 'SENT_FOR_SANDEEP_APPROVAL' then '5.L2'
when estate_status = 'SHORTLISTED' then '6.Pre ATL signing'
when estate_status = 'SENT_TO_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when estate_status = 'SENT_BACK_BY_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when estate_status = 'APPROVED_BY_LEADERSHIP' then '8.Naming Done'
when estate_status = 'DROPPED_REQUESTED' then '9.Dropped/Lost'
when estate_status = 'DROPPED_DECLINE' then 'Other'
when estate_status = 'CALLBACK_TO_UNDER_DRAFT' then '1.Under Draft'
when estate_status = 'CALLBACK_TO_L1_APPROVED' then '4.Pre L2 approval'
when estate_status = 'CALLBACK_APPROVED' then '1.Under Draft'
when estate_status = 'CALLBACK_DECLINE' then 'Other'
when estate_status = 'PENDING_SALES_APPROVAL' then '2.Pre L1' end as Latest_Stage_old,

case when status = 'DRAFT_IN_PROGRESS' then '1.Under Draft'
when status = 'SENT_FOR_APPROVAL_TO_CLUSTER_MANAGER' then '2.Pre L1'
when status = 'SENT_FOR_APPROVAL_TO_ZONAL_HEAD' then '4.Pre L2 approval'
when status = 'SENT_BACK_BY_ZONAL_HEAD' then '4.Pre L2 approval'
when status = 'PENDING_DESIGN_FILES' then '2.Pre L1'
when status = 'SENT_FOR_L1_APPROVAL_TO_CH' then '3.L1'
when status = 'SENT_BACK_BY_CH' then '2.Pre L1'
when status = 'PENDING_INITIAL_BED_COUNT' then '2.Pre L1'
when status = 'SENT_BACK_FROM_INITIAL_BED_COUNT' then '2.Pre L1'
when status = 'SENT_BACK_L1_BY_SANDEEP' then '2.Pre L1'
when status = 'SENT_TO_FILL_L2_DETAILS' then '4.Pre L2 approval'
when status = 'SENT_FOR_L2_APPROVAL_TO_ZH' then '4.Pre L2 approval'
when status = 'SENT_BACK_L2_BY_ZH' then '4.Pre L2 approval'
when status = 'SENT_FOR_L2_APPROVAL_TO_NH' then '5.L2'
when status = 'SENT_BACK_L2_BY_NH' then '4.Pre L2 approval'
when status = 'SENT_TO_TRANSFORMATION_AND_TITLE_DOCS' then '5.L2'
when status = 'SENT_TO_TITLE_DOCS_AND_SANDEEP' then '5.L2'
when status = 'SENT_TO_TITLE_DOCS' then '5.L2'
when status = 'SENT_FOR_APPROVAL_TO_TRANSFORMATION_AND_LEGAL' then '5.L2'
when status = 'SENT_TO_TRANSFORMATION' then '5.L2'
when status = 'SENT_BACK_BY_TRANSFORMATION' then '4.Pre L2 approval'
when status = 'SENT_TO_LEGAL' then '5.L2'
when status = 'SENT_TO_LEGAL_AND_SANDEEP' then '5.L2'
when status = 'SENT_BACK_BY_LEGAL' then '4.Pre L2 approval'
when status = 'SENT_TO_SANDEEP' then '5.L2'
when status = 'SENT_BACK_BY_SANDEEP' then '4.Pre L2 approval'
when status = 'SENT_FOR_APPROVAL_TO_LEGAL' then '5.L2'
when status = 'SENT_BACK_BY_LEGAL_TITLE_DOCS' then '4.Pre L2 approval'
when status = 'SENT_BACK_L2_BY_ANDY' then '4.Pre L2 approval'
when status = 'SENT_FOR_LEADERSHIP_APPROVAL' then '5.L2'
when status = 'SENT_BACK_BY_ANDY' then '2.Pre L1'
when status = 'SENT_FOR_ATL' then '6.Pre ATL signing'
when status = 'ATL_UPLOAD_PENDING' then '7.ATL Generated'
when status = 'SIGNED_ATL_UPLOADED' then '7.ATL Generated'
when status = 'SENT_BACK_BY_LEADERSHIP' then '2.Pre L1'
when status = 'L1_CALLBACK_APPROVAL' then '2.Pre L1'
when status = 'L2_CALLBACK_APPROVAL' then '2.Pre L1'
when status = 'L1_DROP_APPROVAL' then '9.Dropped/Lost'
when status = 'L2_DROP_APPROVAL' then '9.Dropped/Lost'
when status = 'PROPERTY_APPROVED' then '8.Naming Done'
when status = 'DROPPED' then '9.Dropped/Lost'
when status = 'LOI_APPROVAL_REQUEST_RAISED' then 'Other'
when status = 'LOI_REQUEST_APPROVED' then 'Other'
when status = 'LOI_REQUEST_DECLINE' then 'Other'
when status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD' then '2.Pre L1'
when status = 'SENT_FOR_APPROVAL_TO_CITY_HEAD_WITH_DESIGN_FILES' then '2.Pre L1'
when status = 'APPROVED_BY_CITY_HEAD' then '2.Pre L1'
when status = 'SENT_BACK_BY_CITY_HEAD' then '2.Pre L1'
when status = 'SENT_FOR_L1_APPROVAL_TO_NATIONAL_HEAD' then '2.Pre L1'
when status = 'SENT_BACK_L1_BY_NATIONAL_HEAD' then '2.Pre L1'
when status = 'SENT_FOR_L1_APPROVAL_TO_LEADERSHIP' then '3.L1'
when status = 'APPROVED_L1_BY_LEADERSHIP' then '4.Pre L2 approval'
when status = 'SENT_BACK_L1_BY_LEADERSHIP' then '2.Pre L1'
when status = 'SENT_FOR_APPROVAL' then '4.Pre L2 approval'
when status = 'SENT_BACK' then '4.Pre L2 approval'
when status = 'APPROVED_BY_NATIONAL_HEAD' then '4.Pre L2 approval'
when status = 'APPROVED_BY_TRANSFORMATION' then '4.Pre L2 approval'
when status = 'SENT_FOR_SANDEEP_APPROVAL' then '5.L2'
when status = 'SHORTLISTED' then '6.Pre ATL signing'
when status = 'SENT_TO_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when status = 'SENT_BACK_BY_CENTRAL_BD_TEAM' then '6.Pre ATL signing'
when status = 'APPROVED_BY_LEADERSHIP' then '8.Naming Done'
when status = 'DROPPED_REQUESTED' then '9.Dropped/Lost'
when status = 'DROPPED_DECLINE' then 'Other'
when status = 'CALLBACK_TO_UNDER_DRAFT' then '1.Under Draft'
when status = 'CALLBACK_TO_L1_APPROVED' then '4.Pre L2 approval'
when status = 'CALLBACK_APPROVED' then '1.Under Draft'
when status = 'CALLBACK_DECLINE' then 'Other'
when status = 'PENDING_SALES_APPROVAL' then '2.Pre L1' end as Stage,

case when status='SENT_BACK_FROM_INITIAL_BED_COUNT' then 'A.SENT_BACK_FROM_INITIAL_BED_COUNT'
when status= 'SENT_BACK_BY_CITY_HEAD' then 'B.SENT_BACK_BY_CITY_HEAD'
when status='SENT_BACK_BY_CH' then 'B.SENT_BACK_BY_CITY_HEAD'
when status='SENT_BACK_L1_BY_NATIONAL_HEAD' then 'C.SENT_BACK_L1_BY_NATIONAL_HEAD(V1_FLOW)'
when status='SENT_BACK_L1_BY_LEADERSHIP' then 'D.SENT_BACK_L1_BY_LEADERSHIP(V1_FLOW)'
when status='SENT_BACK_L2_BY_ZH' then 'E.SENT_BACK_L2_BY_ZH'
when status='SENT_BACK' then 'F.SENT_BACK_L2_BY_NH'
when status='SENT_BACK_L2_BY_NH' then 'F.SENT_BACK_L2_BY_NH'
when status='SENT_BACK_BY_TRANSFORMATION' then 'G.SENT_BACK_BY_TRANSFORMATION'
when status='SENT_BACK_BY_LEGAL_TITLE_DOCS' then 'H.SENT_BACK_BY_LEGAL'
when status='SENT_BACK_BY_LEGAL' then 'H.SENT_BACK_BY_LEGAL'
when status='SENT_BACK_BY_SANDEEP' then 'I.SENT_BACK_BY_SANDEEP'
when status = 'SENT_BACK_L1_BY_SANDEEP' then 'I.SENT_BACK_BY_SANDEEP'
when status='SENT_BACK_BY_ANDY' then 'J.SENT_BACK_BY_ANDY'
when status = 'SENT_BACK_L2_BY_ANDY' then 'J.SENT_BACK_BY_ANDY'
when status='SENT_BACK_BY_LEADERSHIP' then 'K.SENT_BACK_BY_LEADERSHIP(AFTER_ATL_SIGNED)' else status end as defined_status,



row_number() over (partition by propertyuuid,stage ) stage_flag,


count(case when lower(status) like '%sent_back%'then propertyuuid end) over(partition by propertyuuid) no_sent_back,
case when lower(status) like '%sent_back%'then 1 else 0 end as sent_back_flag,
lag(updatedAt) over(partition by propertyuuid order by updatedAt) updatedAt_1
from comb),



comp_fnl1 as(select distinct propertyname||status||propertyuuid as prop_plus_status, propertyname||estate_status||propertyuuid as prop_plus_current,
createdDate,propertyname,property_name,city,micromarket_name,estate_status,updatedAt, propertyuuid,
typeOfBrand, expectedBedCount, Stage,
effectiveBedCount, buildingHandoverDate, rentStartDate, leasedurationinyears, leaselockinperiodinyears, monthlyrent, max_screatedat,
total_bed_count,status, Latest_Stage,Latest_Stage_old, max_date, no_sent_back,defined_status,stage_flag, bifurcation, "zone","circle",
case when updatedAt_1 is null then 1.00*(datediff('hours',createdDate,updatedAt)) /24 else 1.00*(datediff('hours',updatedAt_1,updatedAt)) /24 end as time_spend, sent_back_flag
from comp_fnl
where lower(propertyname) not like '%test%' and lower(propertyname) not like '%prod sanity%' and lower(propertyname) not like'%pg send back%'),


comp_fnl2 as (select prop_plus_status, prop_plus_current,case when prop_plus_status=prop_plus_current then max_screatedat end as date_latest_status_updated
from comp_fnl1)

select distinct comp_fnl1.*,comp_fnl2.date_latest_status_updated
from comp_fnl1
inner join comp_fnl2
on comp_fnl1.prop_plus_current=comp_fnl2.prop_plus_status

